version: "3.0"

set: ['e', 'u', 'pipefail']
shopt: ['globstar']

env:
  APP:
    sh: echo "${APP_NAME:-hello-hugo}"
  BUILD: "{{.TLD}}/bin/build.sh"
  COMPOSE_FILE: "{{.TLD}}/docker-compose.yml"
  DOCKERFILE: "{{.TLD}}/Dockerfile"
  PLATFORM: "linux/amd64"
  SERVICE: "nginx-static"

tasks:
  print:
    cmds:
      - |
        echo {{.SERVICE}}
        echo {{.TLD}}
        echo {{.USER_WORKING_DIR}}

  build:
    desc: "Build the docker image"
    dir: "{{.USER_WORKING_DIR}}"
    cmds:
      - |
        docker build \
          -f {{.DOCKERFILE}} \
          -t {{.SERVICE}} .

  login:
    desc: "Login to the container registry"
    cmds:
      - |
        echo "{{.REGISTRY_PASS}}" | docker login \
          -u {{.USER_NAME}} \
          --password-stdin {{.REGISTRY_URL}}
    run: once
    silent: true

  push:
    desc: "Push the docker image to the registry"
    deps:
      - login
      - build
    cmds:
      - docker push {{.REGISTRY_URL}}/{{.USER_NAME}}/{{.SERVICE}}

  up:
    desc: "Start the project with docker compose"
    dir: "{{.USER_WORKING_DIR}}"
    cmds:
      - |
        docker compose \
          -f {{.COMPOSE_FILE}} \
          up \
          -d \
          --build \
          --remove-orphans

  exec:
    desc: "Shell into a running container"
    cmds:
      - docker exec -it {{.SERVICE}} sh

  logs:
    desc: "Follow the logs of a running container"
    dir: "{{.USER_WORKING_DIR}}"
    cmds:
      - docker compose logs -tf {{.SERVICE}}

  stop:
    desc: "Stop the project with docker compose"
    dir: "{{.USER_WORKING_DIR}}"
    cmds:
      - docker compose -f {{.COMPOSE_FILE}} stop

  down:
    desc: "Stop and remove containers, networks, and volumes with docker compose"
    dir: "{{.USER_WORKING_DIR}}"
    cmds:
      - |
        docker compose \
          -f {{.COMPOSE_FILE}} \
          down \
          --volumes

  prune:
    desc: "Prune docker"
    cmds:
      - docker system prune --all --force
      - docker builder prune --all --force
